using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Rewired;

/// <summary>
/// Takes the player input and manages the positions, states, and current stats of each player
/// Placed on each player object
/// </summary>
public class PlayerController : MonoBehaviour
{
    
    #region Basic Movement Variables

    public float Acceleration; //How fast you accelerate with one stick
    public float DoubleAcceleration; //How fast you accelerate with two sticks
    public float TopSpeed; //Your max speed achieved with movement
    public float Deceleration; //How fast you stop when you let go of the sticks
    #endregion
    
    #region Rotating

    public float TurnAccel;
    public float TurnTopSpeed;
    public float SpinAccel;
    public float SpinTopSpeed;
    public float RotDecel;
    #endregion
    
    #region Carrying
    //Movement variables when carrying something
    public float CarryAccel;
    public float DoubleCarryAccel;
    public float CarryTopSpeed;
    public float CarryDecel;
    #endregion

    #region General Movement Variables

    public float Drag;
    public float Gravity;
    public float Bounce;

    #endregion
    
    #region General Variables

    //Public
    public int PlayerNum;
    public int TeamID;
    
    //Private
    private Vector3 _moveVector;
    private Vector3 _leftStickVector;
    private Vector3 _rightStickVector;
    private Rigidbody _rb;
    private bool _isGrounded;
    private Player _rewiredPlayer;
    private Camera _cam;
    private Vector3 _camRelativeVector;
    #endregion

    #region State Machine

    //Movement State
    private enum MoveState
    {
        Neutral,
        Airborne,
        Bouncing,
        Dead
    }

    private MoveState _moveState;

    #endregion
    
    // Start is called before the first frame update
    void Start()
    {
        //Initialize RigidBody
        _rb = GetComponent<Rigidbody>();
        
        //Initialize rewired
        _rewiredPlayer = ReInput.players.GetPlayer(PlayerNum);
    }

    // Update is called once per frame
    void Update()
    {
        GetInputs();
    }

    private void FixedUpdate()
    {
        switch (_moveState)
        {
            case MoveState.Neutral:
                break;
            case MoveState.Airborne:
                break;
            case MoveState.Bouncing:
                break;
            case MoveState.Dead:
                break;
            default:
                Debug.Log("state machine broke: " + PlayerNum);
                break;
        }
    }

    #region Movement

    private void GetInputs()
    {
        //Get input from the sticks
        _leftStickVector = new Vector3(_rewiredPlayer.GetAxis("L_Horz"), 0, _rewiredPlayer.GetAxis("L_Vert"));
        _rightStickVector = new Vector3(_rewiredPlayer.GetAxis("R_Horz"), 0, _rewiredPlayer.GetAxis("R_Vert"));
        
        //Take the vectors generated by the sticks, and put them together
        Vector3 inputVector = _leftStickVector + _rightStickVector;
        
        //find the forward vector of the player
        Vector3 forward = _cam.transform.forward;
        Vector3 right = _cam.transform.right;
        forward.y = 0f;
        right.y = 0f;
        forward.Normalize();
        right.Normalize();
        _camRelativeVector = forward * inputVector.z + right * inputVector.x;
    }

    private void Move()
    {
       //get money test kldsajhfglzkchvlskcdjvghdsa
    }

    #endregion
}
